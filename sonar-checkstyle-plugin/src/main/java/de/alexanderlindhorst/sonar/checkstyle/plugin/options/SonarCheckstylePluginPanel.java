package de.alexanderlindhorst.sonar.checkstyle.plugin.options;

import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.util.prefs.Preferences;

import org.openide.util.Exceptions;
import org.openide.util.NbPreferences;

import de.alexanderlindhorst.sonar.checkstyle.plugin.options.gui.SonarCheckstylePluginConfigPane;

final class SonarCheckstylePluginPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;

    private final SonarCheckstylePluginOptionsPanelController controller;

    SonarCheckstylePluginPanel(SonarCheckstylePluginOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        configPane = new de.alexanderlindhorst.sonar.checkstyle.plugin.options.gui.SonarCheckstylePluginConfigPane();

        setLayout(new java.awt.BorderLayout());
        add(configPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(SonarCheckstylePluginPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(SonarCheckstylePluginPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        Preferences preferences = NbPreferences.forModule(SonarCheckstylePluginPanel.class);
        if (preferences != null) {
            String configURL = preferences.get("config_url", null);
            if (configURL != null && !configURL.isEmpty()) {
                try {
                    configPane.setConfigUrl(URI.create(configURL).toURL());
                } catch (MalformedURLException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(SonarCheckstylePluginPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(SonarCheckstylePluginPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        Preferences preferences = NbPreferences.forModule(SonarCheckstylePluginPanel.class);
        if (preferences != null) {
            URL configUrl;
            try {
                configUrl = configPane.getConfigUrl();
            } catch (MalformedURLException ex) {
                Exceptions.printStackTrace(ex);
                return;
            }
            if (configUrl != null) {
                preferences.put("config_url", configUrl.toExternalForm());
            }
        }
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    SonarCheckstylePluginConfigPane getConfigPane() {
        return configPane;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.alexanderlindhorst.sonar.checkstyle.plugin.options.gui.SonarCheckstylePluginConfigPane configPane;
    // End of variables declaration//GEN-END:variables
}
