/*
 *  LICENSE INFORMATION:
 */
package de.alexanderlindhorst.sonar.checkstyle.plugin.options;

import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.util.prefs.Preferences;

import org.openide.util.Exceptions;
import org.openide.util.NbPreferences;

import de.alexanderlindhorst.sonar.checkstyle.plugin.options.gui.SonarCheckstylePluginConfigPane;

final class SonarCheckstylePluginPanel extends javax.swing.JPanel {
    private static final long serialVersionUID = 1L;

    private final SonarCheckstylePluginOptionsPanelController controller;
    private final SonarCheckstylePluginConfigPane pane;

    SonarCheckstylePluginPanel(SonarCheckstylePluginOptionsPanelController controller) {
        this.controller = controller;
        this.pane = new SonarCheckstylePluginConfigPane();
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel configPane = pane;
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setLayout(new java.awt.BorderLayout());

        configPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        configPane.setName(""); // NOI18N

        javax.swing.GroupLayout configPaneLayout = new javax.swing.GroupLayout(configPane);
        configPane.setLayout(configPaneLayout);
        configPaneLayout.setHorizontalGroup(
            configPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        configPaneLayout.setVerticalGroup(
            configPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 142, Short.MAX_VALUE)
        );

        add(configPane, java.awt.BorderLayout.CENTER);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        add(jScrollPane1, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(SonarCheckstylePluginPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(SonarCheckstylePluginPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        Preferences preferences = NbPreferences.forModule(SonarCheckstylePluginPanel.class);
        if (preferences != null) {
            String configURL = preferences.get("config_url", null);
            if (configURL != null && !configURL.isEmpty()) {
                try {
                    pane.setConfigUrl(URI.create(configURL).toURL());
                } catch (MalformedURLException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(SonarCheckstylePluginPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(SonarCheckstylePluginPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        Preferences preferences = NbPreferences.forModule(SonarCheckstylePluginPanel.class);
        if (preferences != null) {
            URL configUrl;
            try {
                configUrl = pane.getConfigUrl();
            } catch (MalformedURLException ex) {
                Exceptions.printStackTrace(ex);
                return;
            }
            if (configUrl != null) {
                preferences.put("config_url", configUrl.toExternalForm());
            }
        }
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
