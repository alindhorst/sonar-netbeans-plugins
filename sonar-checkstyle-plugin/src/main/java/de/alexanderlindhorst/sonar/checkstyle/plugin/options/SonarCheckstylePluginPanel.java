package de.alexanderlindhorst.sonar.checkstyle.plugin.options;

import java.net.MalformedURLException;
import java.net.URL;

import org.openide.util.Exceptions;
import de.alexanderlindhorst.sonar.checkstyle.plugin.options.gui.SonarCheckstylePluginConfigPane;
import de.alexanderlindhorst.sonarcheckstyle.plugin.util.SonarCheckstylePluginUtils;

final class SonarCheckstylePluginPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;

    private final SonarCheckstylePluginOptionsPanelController controller;

    SonarCheckstylePluginPanel(SonarCheckstylePluginOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        configPane = new de.alexanderlindhorst.sonar.checkstyle.plugin.options.gui.SonarCheckstylePluginConfigPane();

        setLayout(new java.awt.BorderLayout());
        add(configPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        URL loadConfigUrl = SonarCheckstylePluginUtils.loadConfigUrl();
        configPane.setConfigUrl(loadConfigUrl);
    }

    void store() {
        try {
            URL configUrl = configPane.getConfigUrl();
            SonarCheckstylePluginUtils.storeConfigURL(configUrl == null ? null : configUrl.toExternalForm());
        } catch (MalformedURLException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    boolean valid() {
        return true;
    }

    SonarCheckstylePluginConfigPane getConfigPane() {
        return configPane;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.alexanderlindhorst.sonar.checkstyle.plugin.options.gui.SonarCheckstylePluginConfigPane configPane;
    // End of variables declaration//GEN-END:variables
}
